{
  "name": "vscode-shell",
  "displayName": "Shell",
  "description": "",
  "version": "0.1.0",
  "publisher": "",
  "author": "",
  "license": "MIT",
  "icon": "icon.png",
  "private": false,
  "repository": {
    "type": "git",
    "url": ""
  },
  "bugs": {
    "url": ""
  },
  "homepage": "",
  "categories": [
    "Linters",
    "Formatters",
    "Programming Languages"
  ],
  "keywords": [
    "shell",
    "shellscript",
    "sh",
    "bash",
    "posix",
    "lint",
    "formatter",
    "dockerfile",
    "dotenv",
    "bats"
  ],
  "engines": {
    "vscode": "^1.105.0",
    "node": ">=24",
    "npm": ">=11"
  },
  "activationEvents": [
    "onLanguage:shellscript",
    "onLanguage:bats",
    "onLanguage:dockerfile",
    "onLanguage:dotenv",
    "onLanguage:ignore",
    "onLanguage:hosts",
    "onLanguage:jvmoptions",
    "onLanguage:properties",
    "onLanguage:azcli",
    "workspaceContains:**/.shellcheckrc"
  ],
  "main": "./dist/extension.js",
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": "limited",
      "description": "Only user-configured binaries are used in untrusted workspaces.",
      "restrictedConfigurations": [
        "vscode-shell.shellcheck.path",
        "vscode-shell.shfmt.path"
      ]
    },
    "virtualWorkspaces": {
      "supported": false,
      "description": "Local shellcheck/shfmt binaries are required."
    }
  },
  "contributes": {
    "languages": [
      {
        "id": "shellscript",
        "extensions": [
          ".sh",
          ".bash",
          ".zsh"
        ]
      },
      {
        "id": "bats",
        "extensions": [
          ".bats"
        ]
      },
      {
        "id": "dockerfile",
        "aliases": [
          "docker",
          "Dockerfile"
        ],
        "filenamePatterns": [
          "Dockerfile",
          "Dockerfile.*",
          "*.dockerfile"
        ]
      },
      {
        "id": "ignore",
        "aliases": [
          "gitignore",
          "dockerignore"
        ],
        "filenames": [
          ".gitignore",
          ".dockerignore"
        ]
      },
      {
        "id": "dotenv",
        "aliases": [
          "env"
        ],
        "filenames": [
          "env",
          ".env"
        ],
        "filenamePatterns": [
          ".env.*"
        ]
      },
      {
        "id": "jvmoptions",
        "aliases": [
          "vmoptions"
        ],
        "extensions": [
          ".vmoptions"
        ],
        "filenames": [
          "jvm.options"
        ]
      },
      {
        "id": "hosts",
        "filenames": [
          "hosts"
        ]
      },
      {
        "id": "properties",
        "aliases": [
          "Properties",
          "spring-boot-properties"
        ],
        "extensions": [
          ".properties"
        ]
      },
      {
        "id": "azcli",
        "extensions": [
          ".azcli"
        ]
      }
    ],
    "commands": [
      {
        "command": "vscode-shell.lint.run",
        "title": "Shell: Run ShellCheck"
      },
      {
        "command": "vscode-shell.format.document",
        "title": "Shell: Format Document (shfmt)"
      }
    ],
    "configuration": {
      "title": "Shell",
      "type": "object",
      "properties": {
        "vscode-shell.lint.enable": {
          "description": "Enable ShellCheck diagnostics.",
          "type": "boolean",
          "scope": "resource",
          "default": true
        },
        "vscode-shell.lint.onSave": {
          "description": "Run ShellCheck on save (disable to run manually or on type).",
          "type": "boolean",
          "scope": "resource",
          "default": true
        },
        "vscode-shell.lint.mode": {
          "description": "When to run ShellCheck diagnostics.",
          "type": "string",
          "enum": [
            "onSave",
            "onType",
            "manual"
          ],
          "scope": "resource",
          "default": "onSave"
        },
        "vscode-shell.shellcheck.path": {
          "description": "Path to the shellcheck binary. Empty means resolve from node_modules/.bin or PATH.",
          "type": "string",
          "scope": "machine-overridable",
          "default": ""
        },
        "vscode-shell.shellcheck.exclude": {
          "markdownDescription": "Exclude ShellCheck error codes (e.g., `1017` or `SC1017`). Prefer using a `.shellcheckrc` file.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(SC)?\\d{4}$"
          },
          "scope": "resource",
          "default": []
        },
        "vscode-shell.shellcheck.customArgs": {
          "markdownDescription": "Extra args passed to shellcheck. Prefer `.shellcheckrc` when possible.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "scope": "resource",
          "default": []
        },
        "vscode-shell.shellcheck.ignorePatterns": {
          "markdownDescription": "Glob patterns to exclude from linting (relative to workspace).",
          "type": "object",
          "scope": "resource",
          "additionalProperties": {
            "type": "boolean"
          },
          "default": {
            "**/*.csh": true,
            "**/*.cshrc": true,
            "**/*.fish": true,
            "**/*.login": true,
            "**/*.logout": true,
            "**/*.tcsh": true,
            "**/*.tcshrc": true,
            "**/*.xonshrc": true,
            "**/*.xsh": true,
            "**/*.zsh": true,
            "**/*.zshrc": true,
            "**/zshrc": true,
            "**/*.zprofile": true,
            "**/zprofile": true,
            "**/*.zlogin": true,
            "**/zlogin": true,
            "**/*.zlogout": true,
            "**/zlogout": true,
            "**/*.zshenv": true,
            "**/zshenv": true,
            "**/*.zsh-theme": true
          }
        },
        "vscode-shell.shellcheck.useWorkspaceRootAsCwd": {
          "description": "Use workspace root as CWD for shellcheck (instead of file's folder).",
          "type": "boolean",
          "scope": "resource",
          "default": false
        },
        "vscode-shell.shellcheck.logLevel": {
          "description": "Extension log level.",
          "type": "string",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "off"
          ],
          "scope": "window",
          "default": "info"
        },
        "vscode-shell.shellcheck.disableVersionCheck": {
          "description": "Disable shellcheck version checks.",
          "type": "boolean",
          "scope": "machine-overridable",
          "default": false
        },
        "vscode-shell.format.enable": {
          "description": "Enable shfmt formatting.",
          "type": "boolean",
          "scope": "resource",
          "default": true
        },
        "vscode-shell.shfmt.path": {
          "description": "Path to the shfmt binary. Empty means resolve from node_modules/.bin or PATH.",
          "type": "string",
          "scope": "machine-overridable",
          "default": ""
        },
        "vscode-shell.shfmt.flags": {
          "description": "Flags to pass to shfmt (e.g., -i 2 -ci -bn).",
          "type": [
            "string",
            "null"
          ],
          "scope": "resource",
          "default": null
        },
        "vscode-shell.shfmt.useEditorConfig": {
          "description": "Use EditorConfig to derive shfmt options.",
          "type": "boolean",
          "scope": "resource",
          "default": false
        },
        "vscode-shell.format.effectLanguages": {
          "description": "Languages where the formatter is active.",
          "type": "array",
          "scope": "resource",
          "default": [
            "shellscript",
            "dockerfile",
            "dotenv",
            "hosts",
            "jvmoptions",
            "ignore",
            "gitignore",
            "properties",
            "spring-boot-properties",
            "azcli",
            "bats"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "scripts": {
    "preinstall": "node scripts/guard-engines.js",
    "ci:install": "npm ci --no-audit --fund=false --include=dev",
    "build": "",
    "clean": "",
    "lint:eslint": "eslint .",
    "lint:stylelint": "stylelint \"**/*.{css,scss}\"",
    "lint": "concurrently -n ESLINT,STYLELINT --raw --success=all \"npm:lint:eslint\" \"npm:lint:stylelint\"",
    "lint:fix": "eslint --fix . && stylelint --fix '**/*.{css,scss}'",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand",
    "test:watch": "node --experimental-vm-modules node_modules/jest/bin/jest.js --watch",
    "test:ci": "node --experimental-vm-modules node_modules/jest/bin/jest.js --ci --reporters=default",
    "prepare": "husky",
    "vscode:prepublish": "npm run build",
    "package": "vsce package",
    "publish:vsce": "vsce publish"
  },
  "devDependencies": {
    "@commitlint/cli": "^20.1.0",
    "@commitlint/config-conventional": "^20.0.0",
    "@eslint-community/eslint-plugin-eslint-comments": "^4.5.0",
    "@eslint/css": "^0.13.0",
    "@eslint/js": "^9.38.0",
    "@eslint/json": "^0.13.2",
    "@eslint/markdown": "^7.4.0",
    "@html-eslint/eslint-plugin": "^0.47.0",
    "@html-eslint/parser": "^0.47.0",
    "@ianvs/prettier-plugin-sort-imports": "^4.7.0",
    "@stylistic/eslint-plugin": "^5.5.0",
    "@types/eslint-plugin-jsx-a11y": "^6.10.1",
    "@types/eslint-plugin-security": "^3.0.0",
    "@types/vscode": "^1.105.0",
    "@vscode/vsce": "^3.6.2",
    "concurrently": "^9.2.1",
    "eslint": "^9.38.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import-x": "^4.16.1",
    "eslint-plugin-jest": "^29.0.1",
    "eslint-plugin-jest-extended": "^3.0.1",
    "eslint-plugin-jsdoc": "^61.1.5",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-n": "^17.23.1",
    "eslint-plugin-no-unsanitized": "^4.1.4",
    "eslint-plugin-promise": "^7.2.1",
    "eslint-plugin-regexp": "^2.10.0",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-sonarjs": "^3.0.5",
    "eslint-plugin-unicorn": "^61.0.2",
    "eslint-plugin-yml": "^1.19.0",
    "globals": "^16.4.0",
    "husky": "^9.1.7",
    "lint-staged": "^16.2.4",
    "prettier": "^3.6.2",
    "stylelint": "^16.25.0",
    "stylelint-config-clean-order": "^7.0.0",
    "stylelint-config-standard": "^39.0.1",
    "stylelint-define-config": "^16.24.0",
    "typescript": "^5.9.3",
    "typescript-eslint": "^8.46.1",
    "yaml-eslint-parser": "^1.3.0"
  },
  "overrides": {
    "inflight": false,
    "semver-diff": false
  }
}
